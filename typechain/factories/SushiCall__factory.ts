/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { SushiCall, SushiCallInterface } from '../SushiCall';

const _abi = [
  {
    inputs: [],
    name: 'gasLeft',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gasbase',
    outputs: [
      {
        internalType: 'uint256',
        name: 'ret',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gaslimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'getEthBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'gasLimit',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct SushiCall.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'sushicall',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'bool',
            name: 'success',
            type: 'bool',
          },
          {
            internalType: 'uint256',
            name: 'gasUsed',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'returnData',
            type: 'bytes',
          },
        ],
        internalType: 'struct SushiCall.Result[]',
        name: 'returnData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610a8b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630f28c97d146100675780632a722839146100855780632ddb301b146100a35780634d2301cc146100c1578063517ddc4b146100f1578063722482881461010f575b600080fd5b61006f610140565b60405161007c919061072a565b60405180910390f35b61008d610148565b60405161009a919061072a565b60405180910390f35b6100ab610150565b6040516100b8919061072a565b60405180910390f35b6100db60048036038101906100d6919061052d565b610158565b6040516100e8919061072a565b60405180910390f35b6100f9610179565b604051610106919061072a565b60405180910390f35b6101296004803603810190610124919061055a565b610181565b604051610137929190610745565b60405180910390f35b600042905090565b600045905090565b60005a905090565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b600048905090565b60006060439150825167ffffffffffffffff8111156101a3576101a26109ed565b5b6040519080825280602002602001820160405280156101dc57816020015b6101c9610334565b8152602001906001900390816101c15790505b50905060005b835181101561032e576000806000868481518110610203576102026109be565b5b602002602001015160000151878581518110610222576102216109be565b5b602002602001015160200151888681518110610241576102406109be565b5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516102819190610713565b60006040518083038160008787f1925050503d80600081146102bf576040519150601f19603f3d011682016040523d82523d6000602084013e6102c4565b606091505b509150915060005a846102d79190610857565b90506040518060600160405280841515815260200182815260200183815250898981518110610309576103086109be565b5b602002602001018190525050505050505050808061032690610946565b9150506101e2565b50915091565b604051806060016040528060001515815260200160008152602001606081525090565b600061036a6103658461079a565b610775565b9050808382526020820190508285602086028201111561038d5761038c610a2b565b5b60005b858110156103db57813567ffffffffffffffff8111156103b3576103b2610a1c565b5b8086016103c08982610498565b85526020850194506020840193505050600181019050610390565b5050509392505050565b60006103f86103f3846107c6565b610775565b90508281526020810184848401111561041457610413610a30565b5b61041f8482856108d3565b509392505050565b60008135905061043681610a50565b92915050565b600082601f83011261045157610450610a1c565b5b8135610461848260208601610357565b91505092915050565b600082601f83011261047f5761047e610a1c565b5b813561048f8482602086016103e5565b91505092915050565b6000606082840312156104ae576104ad610a21565b5b6104b86060610775565b905060006104c884828501610427565b60008301525060206104dc84828501610518565b602083015250604082013567ffffffffffffffff811115610500576104ff610a26565b5b61050c8482850161046a565b60408301525092915050565b60008135905061052781610a67565b92915050565b60006020828403121561054357610542610a3a565b5b600061055184828501610427565b91505092915050565b6000602082840312156105705761056f610a3a565b5b600082013567ffffffffffffffff81111561058e5761058d610a35565b5b61059a8482850161043c565b91505092915050565b60006105af83836106a5565b905092915050565b60006105c282610807565b6105cc818561082a565b9350836020820285016105de856107f7565b8060005b8581101561061a57848403895281516105fb85826105a3565b94506106068361081d565b925060208a019950506001810190506105e2565b50829750879550505050505092915050565b6106358161089d565b82525050565b600061064682610812565b610650818561083b565b93506106608185602086016108e2565b61066981610a3f565b840191505092915050565b600061067f82610812565b610689818561084c565b93506106998185602086016108e2565b80840191505092915050565b60006060830160008301516106bd600086018261062c565b5060208301516106d060208601826106f5565b50604083015184820360408601526106e8828261063b565b9150508091505092915050565b6106fe816108c9565b82525050565b61070d816108c9565b82525050565b600061071f8284610674565b915081905092915050565b600060208201905061073f6000830184610704565b92915050565b600060408201905061075a6000830185610704565b818103602083015261076c81846105b7565b90509392505050565b600061077f610790565b905061078b8282610915565b919050565b6000604051905090565b600067ffffffffffffffff8211156107b5576107b46109ed565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156107e1576107e06109ed565b5b6107ea82610a3f565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610862826108c9565b915061086d836108c9565b9250828210156108805761087f61098f565b5b828203905092915050565b6000610896826108a9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156109005780820151818401526020810190506108e5565b8381111561090f576000848401525b50505050565b61091e82610a3f565b810181811067ffffffffffffffff8211171561093d5761093c6109ed565b5b80604052505050565b6000610951826108c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109845761098361098f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610a598161088b565b8114610a6457600080fd5b50565b610a70816108c9565b8114610a7b57600080fd5b5056fea164736f6c6343000807000a';

export class SushiCall__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<SushiCall> {
    return super.deploy(overrides || {}) as Promise<SushiCall>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SushiCall {
    return super.attach(address) as SushiCall;
  }
  connect(signer: Signer): SushiCall__factory {
    return super.connect(signer) as SushiCall__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SushiCallInterface {
    return new utils.Interface(_abi) as SushiCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SushiCall {
    return new Contract(address, _abi, signerOrProvider) as SushiCall;
  }
}
